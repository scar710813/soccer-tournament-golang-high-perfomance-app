// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/jairogloz/go-l/pkg/ports (interfaces: LeagueService)

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	domain "github.com/jairogloz/go-l/pkg/domain"
)

// MockLeagueService is a mock of LeagueService interface.
type MockLeagueService struct {
	ctrl     *gomock.Controller
	recorder *MockLeagueServiceMockRecorder
}

// MockLeagueServiceMockRecorder is the mock recorder for MockLeagueService.
type MockLeagueServiceMockRecorder struct {
	mock *MockLeagueService
}

// NewMockLeagueService creates a new mock instance.
func NewMockLeagueService(ctrl *gomock.Controller) *MockLeagueService {
	mock := &MockLeagueService{ctrl: ctrl}
	mock.recorder = &MockLeagueServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockLeagueService) EXPECT() *MockLeagueServiceMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockLeagueService) Create(arg0 context.Context, arg1 *domain.League) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// Create indicates an expected call of Create.
func (mr *MockLeagueServiceMockRecorder) Create(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockLeagueService)(nil).Create), arg0, arg1)
}

// Delete mocks base method.
func (m *MockLeagueService) Delete(arg0 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Delete", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// Delete indicates an expected call of Delete.
func (mr *MockLeagueServiceMockRecorder) Delete(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Delete", reflect.TypeOf((*MockLeagueService)(nil).Delete), arg0)
}

// Get mocks base method.
func (m *MockLeagueService) Get(arg0 string) (*domain.League, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", arg0)
	ret0, _ := ret[0].(*domain.League)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get.
func (mr *MockLeagueServiceMockRecorder) Get(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockLeagueService)(nil).Get), arg0)
}
